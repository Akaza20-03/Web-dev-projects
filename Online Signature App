<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signature</title>
    <style>
        .main {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        .canvs {
            border: 5px solid black;
        }
        .top, .bottom {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            margin: 20px 0;
        }
        .block, button, input, select {
            width: 80%;
        }
        .clear, .save, .retrieve {
            width: 20%;
            padding: 5px;
            background-color: greenyellow;
            border-radius: 5px;
        }
        .clear:hover, .save:hover, .retrieve:hover {
            background-color: rgb(153, 218, 55);
            color: azure;
        }
    </style>
</head>
<body>
    <div class="main">
        <div class="top">
            <div class="block">
                <p>Text Color</p>
                <input class="forms" type="color" id="colorchange"/>
            </div>
            <div class="block">
                <p>Background</p>
                <input class="forms" type="color" id="backchange"/>
            </div>
            <div class="block">
                <p>Font Size</p>
                <select id="fontsize">
                    <option value="5">5px</option>
                    <option value="10">10px</option>
                    <option value="15">15px</option>
                    <option value="20">20px</option>
                </select>
            </div>
        </div>
        <div>
            <canvas class="canvs" id="canvas" width="800" height="400"></canvas>
        </div>
        <div class="bottom">
            <button type="button" class="clear" id="cl">Clear</button>
            <button type="button" class="save" id="sa">Save</button>
            <button type="button" class="retrieve" id="rev">Retrieve</button>
        </div>
    </div>
    <script>
        const texColor = document.getElementById("colorchange");
        const bgcolor = document.getElementById("backchange");
        const fontsize = document.getElementById("fontsize");
        const canvas = document.getElementById("canvas");
        const clear= document.getElementById("cl");
        const save =document.getElementById("sa");
        const ret= document.getElementById("rev");
        const ctx = canvas.getContext('2d');
        
        let isDrawing = false;
        let X = 0;
        let Y = 0;

        texColor.addEventListener('change', (e) => {
            ctx.strokeStyle = e.target.value;
            ctx.fillStyle = e.target.value;
        });

        canvas.addEventListener('mousedown', (e) => {
            isDrawing = true;
            X = e.offsetX;
            Y = e.offsetY;
        });

        canvas.addEventListener('mousemove', (e) => {
            if (isDrawing) {
                ctx.beginPath();
                ctx.moveTo(X, Y);
                ctx.lineTo(e.offsetX, e.offsetY);
                ctx.stroke();
                X = e.offsetX;
                Y = e.offsetY;
            }
        });
        canvas.addEventListener('mouseup',(e)=>{
            isDrawing=false;
        })
        canvas.addEventListener('mouseleave',(e)=>{
            isDrawing=false; 
        })
        bgcolor.addEventListener('change',(e)=>{
            ctx.fillStyle=e.target.value;
            ctx.fillRect(0,0,800,400);
        })
        fontsize.addEventListener('change',(e)=>{
            ctx.lineWidth=e.target.value;
        } )
        clear.addEventListener('click',(e)=>{
            ctx.clearRect(0,0,800,400);
        })
        save.addEventListener('click', (e) => {
            localStorage.setItem('canvasContents', canvas.toDataURL());
            let link = document.createElement('a');
            link.download = 'signature.png';
            link.href = canvas.toDataURL();
            link.click();
        });
        ret.addEventListener('click',(e)=>{
            let savecontent=localStorage.getItem('canvasContents');
            if(savecontent){
                let img=new Image();
                img.src=savecontent;
                ctx.drawImage(img,0,0);
            }
        })
        

    </script>
</body>
</html>
